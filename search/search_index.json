{"config":{"lang":["en"],"separator":"[\\s\\-]+","pipeline":["stopWordFilter"]},"docs":[{"location":"","title":"Home","text":""},{"location":"#welcome","title":"Welcome \ud83d\udc4b","text":"<p>Find a software solution via menu or search bar.</p>"},{"location":"android-apps/install-android-apps-on-linux-using-waydroid/","title":"Install Android Apps on Linux Using Waydroid","text":""},{"location":"android-apps/install-android-apps-on-linux-using-waydroid/#1-waydroid-installation-steps-for-linux-mint","title":"1. Waydroid Installation Steps for Linux Mint","text":"<ol> <li>Open a terminal and run the following commands to install Waydroid:     <pre><code># Install pre-requisites\nsudo apt install curl ca-certificates -y\n# Add the official repository\ncurl -s https://repo.waydro.id | sudo bash\n# Download and install Waydroid\nsudo apt install waydroid -y\n# Start container service (if not started automatically)\nsudo systemctl enable --now waydroid-container\n# Download Android image VANILLA (no Google) for Waydroid\nsudo waydroid init -s VANILLA\n</code></pre></li> <li>If you want or need to use Google Play Store, replace <code>VANILLA</code> with <code>GAPPS</code> in the command above:     <pre><code>sudo waydroid init -s GAPPS\n</code></pre></li> <li>After installation you can start Waydroid by running:     <pre><code>waydroid show-full-ui\n</code></pre></li> </ol>"},{"location":"android-apps/install-android-apps-on-linux-using-waydroid/#2-sources","title":"2. Sources","text":"<ul> <li>https://waydro.id/#install</li> <li>https://docs.waydro.id/usage/install-on-desktops#ubuntu-debian-and-derivatives</li> </ul>"},{"location":"android-apps/install-android-apps-without-google-play-store/","title":"Install Android Apps without Google Play Store","text":"<p>Note</p> <p>To install an app without Google Play Store, download and open its APK file from its official website, if available, or from a third-party source like f-droid.org, Aurora Store or apkmirror.com.</p> <p>Warning</p> <p>Only download APK files from trusted sources \u26a0\ufe0f</p>"},{"location":"android-apps/install-android-apps-without-google-play-store/#1-download-apks-from-official-sources","title":"1. Download APKs from Official Sources","text":"Name Source Code Download Page Download Link Firefox Firefox GitHub Firefox for Android Releases - Signal Signal Github Signal Android APK Download latest release Telegram Telegram Github Telegram for Android Download Telegram.apk Whatsapp \u26a0\ufe0f Closed Source Whatsapp for Android -"},{"location":"android-apps/install-android-apps-without-google-play-store/#2-download-apks-from-third-party-sources","title":"2. Download APKs from Third-Party Sources","text":"Name Source Code Download Page Download Link F-Droid F-Droid GitLab F-Droid Apps Download F-Droid.apk Aurora Store Aurora Store GitLab Aurora Store Releases Download AuroraStore-4.7.0.apk"},{"location":"brave/update-brave-on-linux-mint/","title":"Update brave on linux mint","text":"<pre><code>sudo curl -fsSLo /usr/share/keyrings/brave-browser-archive-keyring.gpg https://brave-browser-apt-release.s3.brave.com/brave-browser-archive-keyring.gpg\necho \"deb [signed-by=/usr/share/keyrings/brave-browser-archive-keyring.gpg arch=amd64] https://brave-browser-apt-release.s3.brave.com/ stable main\" | sudo tee /etc/apt/sources.list.d/brave-browser-release.list\nsudo apt update\nsudo apt install brave-browser\n</code></pre> <p>Source: How to Update Brave on Linux Mint 21.3 - Grok AI</p>"},{"location":"firefox/add-search-shortcuts-to-firefox/","title":"Add Search Shortcuts To Firefox","text":""},{"location":"firefox/add-search-shortcuts-to-firefox/#show-hidden-add-button-to-add-search-engine-manually","title":"Show Hidden Add Button to Add Search Engine Manually","text":"<ol> <li>Open new tab and paste in URL bar:<ul> <li><code>about:config</code></li> <li>Confirm Accept the Risk and Continue</li> </ul> </li> <li>Search for<ul> <li><code>browser.urlbar.update2.engineAliasRefresh</code></li> <li>Add via button + if not exists</li> </ul> </li> <li>Set/Toggle to <code>true</code></li> <li>Go to <code>Firefox Settings &gt; Search</code> or paste in URL bar:<ul> <li><code>about:preferences#search</code></li> </ul> </li> <li>There should now be an Add button next to the Remove button</li> </ol>"},{"location":"git/update-overwrite-last-git-commit-with-amend/","title":"Update overwrite last git commit with amend","text":"<p>Warning</p> <p><code>git commit --amend</code> overwrites the history! Make sure no one else is working with your last commit.</p> <pre><code>git commit --amend --no-edit\n</code></pre> <p>This command soft-resets to the prelast commit on current branch and commits staged changes as new commit.</p>"},{"location":"grapheneos/install-grapheneos-on-google-pixel-phone/","title":"Install GrapheneOS on a Google Pixel Phone","text":"<p>Warning</p> <ol> <li>Backup all data from your phone if it's not a brand new phone.</li> <li>Installing GrapheneOS wipes/erases all data on your phone.</li> <li>Locking your phone's bootloader wipes/erases all data on your phone.</li> </ol> <ol> <li>Prepare Linux Laptop for Flashing Phone as Non-Root User [1]<ol> <li>Check <code>fwupd</code> version     <pre><code>apt-cache policy fwupd\n</code></pre></li> <li>Stop <code>fwupd</code> if version earlier than 1.9.10 (service will start again on reboot)     <pre><code>sudo systemctl stop fwupd.service\n</code></pre></li> </ol> </li> <li>Enable OEM Unlocking on Pixel Phone [2]<ol> <li>Go to <code>Settings &gt; About phone</code></li> <li>Unlock <code>Developer Options</code> by tapping 7x <code>Build number</code></li> <li>Enable <code>OEM unlocking</code> in <code>Settings &gt; System &gt; Developer options</code><ol> <li>If greyed out, connect to internet until ungreyed, then disconnect</li> </ol> </li> </ol> </li> <li>Unlock Bootloader [3]<ol> <li>Power off Pixel Phone: Swipe down twice and tap power icon (bottom right)</li> <li>Press and hold both <code>Power</code> and <code>Volume Down</code> button</li> <li>Connect Pixel Phone with its USB cable to Linux Laptop</li> <li>Open Chromium-based browser on Linux Laptop</li> <li>Open GrapheneOS Web Installer</li> <li>Click Button <code>Unlock bootloader</code> and select Pixel Phone</li> <li>Press any volume key to change to <code>Unlock the bootloader</code> option, then press power key to confirm unlocking bootloader</li> <li>After automatic phone restart, device state should be <code>unlocked</code> (red)</li> </ol> </li> <li>Download and Install GrapheneOS (Wipes your Phone's Data!) [4]<ol> <li>Download GrapheneOS by clicking button <code>Download release</code></li> <li>Install GrapheneOS by clicking button <code>Flash release</code></li> </ol> </li> <li>Lock Bootloader (Wipes your Phone's Data again!)<ol> <li>Click <code>Lock bootloader</code></li> <li>Press any volume key to change to <code>Lock the bootloader</code> option, then press power key to confirm locking bootloader</li> <li>After automatic phone restart, device state should be <code>locked</code> (green)</li> </ol> </li> <li>Verify Boot Key Hash<ol> <li>Press power button to restart phone</li> <li>Press power button to pause boot</li> <li>Verify displayed boot key hash with official Pixel Phone key</li> <li>Remove USB cable from phone and laptop</li> </ol> </li> <li>Disable OEM Unlocking<ol> <li>Press power key to confirm/start GrapheneOS</li> <li>GrapheneOS logo should appear after Google logo</li> <li>At the end of GrapheneOS setup confirm <code>Disable OEM Unlocking</code></li> </ol> </li> </ol>"},{"location":"grapheneos/install-grapheneos-on-google-pixel-phone/#sources","title":"Sources","text":"<ul> <li>[1] Flashing as non-root ~ grapheneos.org</li> <li>[2] Enabling OEM unlocking ~ grapheneos.org</li> <li>[3] Web installer ~ grapheneos.org</li> <li>[4] Obtaining factory images ~ grapheneos.org</li> <li>[5] Verified boot key hash ~ grapheneos.org</li> </ul>"},{"location":"grapheneos/install-proton-vpn-on-grapheneos/","title":"Install Proton VPN on GrapheneOS","text":"<ol> <li>Install F-Droid<ol> <li>Open browser <code>Vanadium</code></li> <li>Go to f-droid.org</li> <li>Download <code>F-Droid.apk</code> by clicking button <code>Download F-DROID</code> or [2]</li> <li>Temporarily allow installation of unknown apps via <code>Vanadium</code><ol> <li><code>Settings &gt; Install unknown apps &gt; Allow from this source</code></li> </ol> </li> <li>Confirm installation of <code>F-Droid</code></li> <li>Revoke permission to install unknown apps via <code>Vanadium</code></li> </ol> </li> <li>Install Proton VPN<ol> <li>Grant <code>F-Droid</code> permission to install apps<ol> <li><code>Settings &gt; Apps &gt; F-Droid &gt; Install unknown apps &gt; Allow from this source</code></li> </ol> </li> <li>Open <code>F-Droid</code> and search for <code>proton vpn</code></li> <li>Select <code>proton vpn</code> and click <code>Install</code></li> </ol> </li> </ol>"},{"location":"grapheneos/install-proton-vpn-on-grapheneos/#sources","title":"Sources","text":"<ul> <li>[1] f-droid.org</li> </ul>"},{"location":"linux/compress-faster-with-parallel-compression-zip-pigz/","title":"Compress faster with parallel compression zip pigz","text":"<pre><code># Compress file\npigz -9 largefile.csv\n# Compress folder\ntar cf - /path/to/folder | pigz &gt; folder.tar.gz\n</code></pre>"},{"location":"linux/disable-wake-up-on-mouse-event/","title":"Disable wake up on mouse event","text":"<ol> <li>List USB devices with waking up enabled<ul> <li><code>grep . /sys/bus/usb/devices/*/power/wakeup | grep enabled</code></li> </ul> </li> <li>Find mouse by removing USB receiver and reexecuting command</li> <li>Disable wake up on mouse move<ul> <li><code>sudo su</code></li> <li><code>echo disabled &gt; /sys/bus/usb/devices/1-3/power/wakeup</code></li> <li>replace <code>1-3</code> with listed number of grep command</li> </ul> </li> <li>Disable wake up on mouse move permanently<ul> <li><code>sudo crontab -e</code></li> <li>Add <code>@reboot echo disabled &gt; /sys/bus/usb/devices/1-3/power/wakeup</code></li> <li>replace <code>1-3</code> with listed number of grep command</li> </ul> </li> </ol>"},{"location":"linux/disable-wake-up-on-mouse-event/#sources","title":"Sources","text":"<ul> <li>askubuntu.com ~ Wake up from suspend using wireless USB keyboard or mouse (for any Linux Distro)</li> <li>glowing-tortoise.com ~ Turn off returning from suspend by the mouse</li> </ul>"},{"location":"linux/restart-cinnamon-from-terminal-1/","title":"Restart cinnamon from terminal 1","text":""},{"location":"linux/restart-cinnamon-from-terminal-1/#restart-cinnamon-desktop-in-terminal-1","title":"Restart Cinnamon Desktop in Terminal 1","text":"<p>Warning</p> <p>Remember <code>CTRL-ALT-F7</code> to switch from <code>terminal 1</code> back to Desktop/GUI/<code>terminal 7</code> [2].</p> <ol> <li>Switch to terminal 1 via <code>CTRL-ALT-F1</code> and execute following commands:     <pre><code># Terminate Cinnamon desktop (forcefully kill all processes named 'cinnamon')\nkillall -9 cinnamon\n# Restart Cinnamon desktop environment\nexport DISPLAY=:0.0 &amp;&amp; cinnamon --replace &amp;\n</code></pre></li> <li>Switch back to desktop via <code>CTRL-ALT-F7</code></li> </ol>"},{"location":"linux/restart-cinnamon-from-terminal-1/#sources","title":"Sources","text":"<ol> <li>Restart cinnamon from CLI ~ forums.linuxmint.com</li> <li>What is terminal 7 | tty7 ~ perplexity.ai</li> </ol>"},{"location":"python/use-isolated-virtual-python-environment-venv/","title":"Use Virtual Python Environment Venv","text":"<pre><code># Create virtual environment (once)\npython3 -m venv venv\n# Activate virtual environment\nsource venv/bin/activate\n# Upgrade pip (once)\npython -m pip install --upgrade pip\n# List installed packages\npython -m pip list\n# Install a package\npython -m pip install &lt;package&gt;\n# Run script.py\npython script.py\n# Deactivate virtual environment\ndeactivate\n</code></pre>"},{"location":"python/use-isolated-virtual-python-environment-venv/#sources","title":"Sources","text":"<ol> <li>https://realpython.com/python-virtual-environments-a-primer/</li> </ol>"},{"location":"signal/decrypt-signal-android-backup-on-linux-mint/","title":"Decrypt signal android backup on linux mint","text":"<pre><code># Install Nix package manager for single user\nsh &lt;(curl -L https://nixos.org/nix/install) --no-daemon\n\n# Source the Nix profile script to set up the Nix environment\n. ~/.nix-profile/etc/profile.d/nix.sh\n\n# Start a Nix shell with the signalbackup-tools package\nnix-shell -p signalbackup-tools\n\n# Create dir for html export\nmkdir html-export\n\n# Run signalbackup-tools to export Signal backup as HTML\nsignalbackup-tools signal.backup &lt;passphrase&gt; --exporthtml html-export/\n</code></pre>"},{"location":"signal/decrypt-signal-android-backup-on-linux-mint/#sources","title":"Sources","text":"<ul> <li>Create Signal Backup ~ support.signal.org</li> <li>Install Nix package manager ~ nix.dev</li> <li>Export to HTML with Nix package signalbackup-tools ~ github.com</li> </ul>"},{"location":"vpn/fix-proton-vpn-error-on-linux-mint-21.3/","title":"Fix proton vpn error on linux mint 21.3","text":""},{"location":"vpn/fix-proton-vpn-error-on-linux-mint-21.3/#problem-proton-vpn-does-not-start","title":"Problem: Proton-VPN Does Not Start","text":"<pre><code>protonvpn-app\nTraceback (most recent call last):\n...\n  File \"/usr/lib/python3/dist-packages/OpenSSL/crypto.py\", line 1598, in X509StoreFlags\n    NOTIFY_POLICY = _lib.X509_V_FLAG_NOTIFY_POLICY\nAttributeError: module 'lib' has no attribute 'X509_V_FLAG_NOTIFY_POLICY'. Did you mean: 'X509_V_FLAG_EXPLICIT_POLICY'?\n...\n</code></pre>"},{"location":"vpn/fix-proton-vpn-error-on-linux-mint-21.3/#solution-update-pyopenssl","title":"Solution: Update pyOpenSSL","text":"<pre><code># Update pyOpenSSL\npip3 install --upgrade pyOpenSSL\n</code></pre>"}]}